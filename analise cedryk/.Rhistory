geom_point() +
labs(title="Operação de Atualização",x="Quantidade de Operações",y="Tempo de Execução (ms)")
ggplot(data=difftime_update, aes(x=quantity, y=time, colour=class))+
geom_line()+
geom_point() +
labs(title="Operação de Atualização",x="Quantidade de Operações",y="Tempo de Execução (ms)") +
scale_fill_discrete(name="Cenários de Execução",labels=c("Mongoclient conj. grande","Mongoclient conj. pequeno","Mongoose conj. pequeno","Mongoose conj. pequeno"))
ggplot(data=difftime_update, aes(x=quantity, y=time, colour=class))+
geom_line()+
geom_point() +
labs(title="Operação de Atualização",x="Quantidade de Operações",y="Tempo de Execução (ms)") +
scale_colour_discrete(name="Cenários de Execução",labels=c("Mongoclient conj. grande","Mongoclient conj. pequeno","Mongoose conj. pequeno","Mongoose conj. pequeno"))
p1 <- ggplot(data=difftime_update, aes(x=quantity, y=time, colour=class))+
geom_line()+
geom_point() +
labs(title="Operação de Atualização",x="Quantidade de Operações",y="Tempo de Execução (ms)") +
scale_colour_discrete(name="Cenários de Execução",labels=c("Mongoclient conj. grande","Mongoclient conj. pequeno","Mongoose conj. pequeno","Mongoose conj. pequeno")) +
theme(legend.position = "bottom")
p1
p1 <- ggplot(data=difftime_update, aes(x=quantity, y=time, colour=class))+
geom_line()+
geom_point() +
labs(title="Operação de Atualização",x="Quantidade de Operações",y="Tempo de Execução (ms)") +
scale_colour_discrete(name="Cenários de Execução",labels=c("Mongoclient conj. grande","Mongoclient conj. pequeno","Mongoose conj. pequeno","Mongoose conj. pequeno"))
p1
lineplot <- function(data, title) {
ggplot(data=data, aes(x=quantity, y=time, colour=class))
+ geom_line()
+ geom_point()
+ labs(title=title,x="Quantidade de Operações",y="Tempo de Execução (ms)")
+ scale_colour_discrete(name="Cenários de Execução",labels=c("Mongoclient conj. grande","Mongoclient conj. pequeno","Mongoose conj. pequeno","Mongoose conj. pequeno"))
}
library(readr)
difftime_create <- read_csv("difftime-create.csv")
View(difftime_create)
library(readr)
difftime_delete <- read_csv("difftime-delete.csv")
View(difftime_delete)
library(readr)
difftime_read <- read_csv("difftime-read.csv")
View(difftime_read)
lineplot(difftime_create,"Operação de Inserção")
lineplot <- function(data, title) {
ggplot(data=data, aes(x=quantity, y=time, colour=class)) + geom_line() + geom_point() + labs(title=title,x="Quantidade de Operações",y="Tempo de Execução (ms)") +
scale_colour_discrete(name="Cenários de Execução",labels=c("Mongoclient conj. grande","Mongoclient conj. pequeno","Mongoose conj. pequeno","Mongoose conj. pequeno"))
}
lineplot(difftime_create,"Operação de Inserção")
lineplot(difftime_delete,"Operação de Remoção")
lineplot(difftime_read,"Operação de Busca")
lineplot
lineplot2 <- function(data, title) {
ggplot(data=data, aes(x=quantity, y=time, colour=class)) + geom_line() + geom_point() + labs(title=title,x="Quantidade de Operações",y="Tempo de Execução (ms)") +
scale_colour_discrete(name="Cenários de Execução",labels=c("Mongoclient conj. grande","Mongoclient conj. pequeno","Mongoose conj. pequeno","Mongoose conj. pequeno")) + facet_wrap(class)
}
lineplot2(difftime_create, "Operação de Inserção")
library("ggplot2")
lineplot2(difftime_create, "Operação de Inserção")
View(difftime_create)
head(difftime_create)
View(difftime_update)
difftime_update <- read.table("./difftime-update.csv", header=TRUE, sep=",")
difftime_update <- read.table("./difftime-update.csv", header=TRUE, sep=",")
difftime_create <- read.table("./difftime-create.csv", header=TRUE, sep=",")
difftime_read <- read.table("./difftime-read.csv", header=TRUE, sep=",")
difftime_delete <- read.table("./difftime-delete.csv", header=TRUE, sep=",")
lineplot2 <- function(data, title) {
ggplot(data=data, aes(x=quantity, y=time, colour=class)) + geom_line() + geom_point() + labs(title=title,x="Quantidade de Operações",y="Tempo de Execução (ms)") +
scale_colour_discrete(name="Cenários de Execução",labels=c("Mongoclient conj. grande","Mongoclient conj. pequeno","Mongoose conj. pequeno","Mongoose conj. pequeno")) + facet_wrap(class)
}
lineplot2(difftime_create, "Operação de Inserção")
lineplot <- function(data, title) {
ggplot(data=data, aes(x=quantity, y=time, colour=class)) + geom_line() + geom_point() + labs(title=title,x="Quantidade de Operações",y="Tempo de Execução (ms)") +
scale_colour_discrete(name="Cenários de Execução",labels=c("Mongoclient conj. grande","Mongoclient conj. pequeno","Mongoose conj. pequeno","Mongoose conj. pequeno"))
}
lineplot(difftime_create, "Operação de Inserção")
lineplot2 <- function(data, title) {
ggplot(data=data, aes(x=quantity, y=time, colour=class)) + geom_line() + geom_point() + labs(title=title,x="Quantidade de Operações",y="Tempo de Execução (ms)") +
scale_colour_discrete(name="Cenários de Execução",labels=c("Mongoclient conj. grande","Mongoclient conj. pequeno","Mongoose conj. pequeno","Mongoose conj. pequeno")) + geom_smooth()
}
lineplot2(difftime_create, "Operação de Inserção")
lineplot2 <- function(data, title) {
ggplot(data=data, aes(x=quantity, y=time, colour=class)) + geom_smooth() + geom_point() + labs(title=title,x="Quantidade de Operações",y="Tempo de Execução (ms)") +
scale_colour_discrete(name="Cenários de Execução",labels=c("Mongoclient conj. grande","Mongoclient conj. pequeno","Mongoose conj. pequeno","Mongoose conj. pequeno"))
}
lineplot2(difftime_create, "Operação de Inserção")
lineplot2(difftime_update, "Operação de Atualização")
lineplot2(difftime_create, "Operação de Inserção")
lineplot2 <- function(data, title) {
ggplot(data=data, aes(x=quantity, y=time, colour=class)) + geom_smooth() + geom_point() + labs(title=title,x="Quantidade de Operações",y="Tempo de Execução (ms)") +
scale_colour_discrete(name="Cenários de Execução",labels=c("Mongoclient conj. pequeno","Mongoose conj. pequeno","Mongoclient conj. grande","Mongoose conj. grande"))
}
lineplot2(difftime_create, "Operação de Inserção")
lineplot2 <- function(data, title) {
ggplot(data=data, aes(x=quantity, y=time, colour=class)) + geom_smooth() + geom_point() + labs(title=title,x="Quantidade de Operações",y="Tempo de Execução (ms)") +
scale_colour_discrete(name="Cenários de Execução",labels=c("Mongoclient conj. grande","Mongoclient conj. pequeno","Mongoose conj. pequeno","Mongoose conj. pequeno"))
}
lineplot2(difftime_create, "Operação de Inserção")
lineplot2 <- function(data, title) {
ggplot(data=data, aes(x=quantity, y=time, colour=class)) + geom_smooth() + geom_point() + labs(title=title,x="Quantidade de Operações",y="Tempo de Execução (ms)") +
scale_colour_manual(name="Cenários de Execução",labels=c("Mongoclient conj. pequeno","Mongoose conj. pequeno","Mongoclient conj. grande","Mongoose conj. grande"))
}
lineplot2(difftime_create, "Operação de Inserção")
lineplot2 <- function(data, title) {
ggplot(data=data, aes(x=quantity, y=time, colour=class)) + geom_smooth() + geom_point() + labs(title=title,x="Quantidade de Operações",y="Tempo de Execução (ms)") +
scale_colour_discrete(name="Cenários de Execução",labels=c("Mongoclient conj. pequeno","Mongoose conj. pequeno","Mongoclient conj. grande","Mongoose conj. grande"))
}
lineplot2(difftime_create, "Operação de Inserção")
lineplot2 <- function(data, title) {
ggplot(data=data, aes(x=quantity, y=time, colour=class)) + geom_smooth() + geom_point() + labs(title=title,x="Quantidade de Operações",y="Tempo de Execução (ms)")
}
difftime_create <- read.table("./difftime-create.csv", header=TRUE, sep=",")
lineplot2(difftime_create, "Operação de Inserção")
difftime_create <- read.table("./difftime-create.csv", header=TRUE, sep=",")
lineplot2(difftime_create, "Operação de Inserção")
lineplot2(difftime_read, "Operação de Busca")
lineplot2(difftime_update, "Operação de Atualização")
difftime_read <- read.table("./difftime-read.csv", header=TRUE, sep=",")
difftime_update <- read.table("./difftime-update.csv", header=TRUE, sep=",")
difftime_delete <- read.table("./difftime-delete.csv", header=TRUE, sep=",")
lineplot2(difftime_read, "Operação de Busca")
lineplot2(difftime_update, "Operação de Atualização")
lineplot2(difftime_delete, "Operação de Remoção")
lineplot2en <- function(data, title) {
ggplot(data=data, aes(x=quantity, y=time, colour=class)) + geom_smooth() + geom_point() + labs(title=title,x="Quantity of Operations",y="Execution Time (ms)")
}
lineplot2en(difftime_delete, "Delete Operation")
lineplot2en <- function(data, title) {
ggplot(data=data, aes(x=quantity, y=time, colour=class)) + geom_smooth() + geom_point() + labs(title=title,x="Quantity of Operations",y="Execution Time (ms)") + theme(legend.title="Classes")
}
lineplot2 <- function(data, title) {
ggplot(data=data, aes(x=quantity, y=time, colour=class)) + geom_smooth() + geom_point() + labs(title=title,x="Quantidade de Operações",y="Tempo de Execução (ms)") + theme(legend.title="Classes)"
}
lineplot2 <- function(data, title) {
ggplot(data=data, aes(x=quantity, y=time, colour=class)) + geom_smooth() + geom_point() + labs(title=title,x="Quantidade de Operações",y="Tempo de Execução (ms)") + theme(legend.title="Classes")
}
lineplot2(difftime_create, "Operação de Inserção")
lineplot2 <- function(data, title) {
ggplot(data=data, aes(x=quantity, y=time, colour=class)) + geom_smooth() + geom_point() + labs(title=title,x="Quantidade de Operações",y="Tempo de Execução (ms)") + theme(legend.title=Classes)
}
lineplot2(difftime_create, "Operação de Inserção")
lineplot2 <- function(data, title) {
titleleg <- "Classes"
ggplot(data=data, aes(x=quantity, y=time, colour=class)) + geom_smooth() + geom_point() + labs(title=title,x="Quantidade de Operações",y="Tempo de Execução (ms)") + theme(legend.title=titleleg)
}
lineplot2(difftime_create, "Operação de Inserção")
lineplot2 <- function(data, title) {
titleleg = "Classes"
ggplot(data=data, aes(x=quantity, y=time, colour=class)) + geom_smooth() + geom_point() + labs(title=title,x="Quantidade de Operações",y="Tempo de Execução (ms)") + theme(legend.title=titleleg)
}
lineplot2(difftime_create, "Operação de Inserção")
lineplot2 <- function(data, title) {
ggplot(data=data, aes(x=quantity, y=time, colour=class)) + geom_smooth() + geom_point() + labs(title=title,x="Quantidade de Operações",y="Tempo de Execução (ms)") + theme(legend.title=element_blank())
}
lineplot2(difftime_create, "Operação de Inserção")
lineplot2(difftime_read, "Operação de Busca")
lineplot2(difftime_update, "Operação de Atualização")
lineplot2(difftime_delete, "Operação de Remoção")
cpuusage_delete <- read.table("./cpuusage-delete.csv", header=TRUE, sep=",")
cpuusage_update <- read.table("./cpuusage-update.csv", header=TRUE, sep=",")
cpuusage_read <- read.table("./cpuusage-read.csv", header=TRUE, sep=",")
cpuusage_create <- read.table("./cpuusage-create.csv", header=TRUE, sep=",")
lineplot2(cpuusage_delete, "Operação de Remoção")
lineplot2(cpuusage_update, "Operação de Atualização")
lineplot2(cpuusage_read, "Operação de Busca")
lineplot2(cpuusage_create, "Operação de Inserção")
lineplot2
lineplot2en <- function(data, title) {
ggplot(data=data, aes(x=quantity, y=time, colour=class)) + geom_smooth() + geom_point() + labs(title=title,x="Quantity of Operations",y="Execution Time (ms)") + theme(legend.title=element_blank())
}
lineplot <- function(data, title) {
ggplot(data=data, aes(x=quantity, y=time, colour=class)) + geom_smooth() + geom_point() + labs(title=title,x="Quantidade de Operações",y="Diferença de Memória RAM (KB)") + theme(legend.title=element_blank())
}
memory_create <- read.table("./memory-create.csv", header=TRUE, sep=",")
memory_read <- read.table("./memory-read.csv", header=TRUE, sep=",")
memory_update <- read.table("./memory-update.csv", header=TRUE, sep=",")
memory_delete <- read.table("./memory-delete.csv", header=TRUE, sep=",")
lineplot(memory_create, "Operação de Inserção")
lineplot(memory_read, "Operação de Busca")
lineplot(memory_update, "Operação de Atualização")
lineplot(memory_delete, "Operação de Remoção")
lineplot
lineploten <- function(data, title) {
ggplot(data=data, aes(x=quantity, y=time, colour=class)) + geom_smooth() + geom_point() + labs(title=title,x="Quantity of Operation",y="RAM Memory Difference (KB)") + theme(legend.title=element_blank())
}
lineplot2en
lineplot
lineplotl <- function(data, title) {
ggplot(data=data, aes(x=quantity, y=time, colour=class)) + geom_line() + geom_point() + labs(title=title,x="Quantidade de Operações",y="Diferença de Memória RAM (KB)") + theme(legend.title=element_blank())
}
lineplotl(memory_create,"Operação de Inserção")
lineplotl(memory_read,"Operação de Busca")
lineplotl(memory_update,"Operação de Atualização")
lineplotl(memory_delete,"Operação de Remoção")
lineplot2
lineplot2l <-function(data, title) {
ggplot(data=data, aes(x=quantity, y=time, colour=class)) + geom_line() + geom_point() + labs(title=title,x="Quantidade de Operações",y="Tempo de Execução (ms)") + theme(legend.title=element_blank())
}
lineplot2l(cpuusage_delete,"Operação de Remoção")
lineplot2l(cpuusage_update,"Operação de Atualização")
lineplot2l(cpuusage_read,"Operação de Busca")
lineplot2l(cpuusage_create,"Operação de Inserção")
lineplot2l(difftime_create,"Operação de Inserção")
lineplot2l(difftime_read,"Operação de Busca")
lineplot2l(difftime_update,"Operação de Atualização")
lineplot2l(difftime_delete,"Operação de Remoção")
function(data, title) {
ggplot(data=data, aes(x=quantity, y=time, colour=class)) + geom_line() + geom_point() + labs(title=title,x="Quantity of Operations",y="Execution Time (ms)") + theme(legend.title=element_blank())
}
lineplot2len <- function(data, title) {
ggplot(data=data, aes(x=quantity, y=time, colour=class)) + geom_line() + geom_point() + labs(title=title,x="Quantity of Operations",y="Execution Time (ms)") + theme(legend.title=element_blank())}
lineplot2len(difftime_create,"Insert Operation")
memory_read_en <- read.table("./memory-read-en.csv", header=TRUE, sep=",")
memory_create_en <- read.table("./memory-create-en.csv", header=TRUE, sep=",")
memory_update_en <- read.table("./memory-update-en.csv", header=TRUE, sep=",")
memory_create_en <- read.table("./memory-create-en.csv", header=TRUE, sep=",")
memory_read_en <- read.table("./memory-read-en.csv", header=TRUE, sep=",")
memory_update_en <- read.table("./memory-update-en.csv", header=TRUE, sep=",")
memory_delete_en <- read.table("./memory-delete-en.csv", header=TRUE, sep=",")
cpuusage_delete_en <- read.table("./cpuusage-delete-en.csv", header=TRUE, sep=",")
cpuusage_update_en <- read.table("./cpuusage-update-en.csv", header=TRUE, sep=",")
cpuusage_read_en <- read.table("./cpuusage-read-en.csv", header=TRUE, sep=",")
cpuusage_insert_en <- read.table("./cpuusage-insert-en.csv", header=TRUE, sep=",")
cpuusage_create_en <- read.table("./cpuusage-create-en.csv", header=TRUE, sep=",")
difftime_create_en <- read.table("./difftime-create-en.csv", header=TRUE, sep=",")
difftime_read_en <- read.table("./difftime-read-en.csv", header=TRUE, sep=",")
difftime_update_en <- read.table("./difftime-update-en.csv", header=TRUE, sep=",")
difftime_delete_en <- read.table("./difftime-delete-en.csv", header=TRUE, sep=",")
lineplot2en(difftime_create_en, "Insert Operation")
lineplot2en(difftime_read_en, "Read Operation")
lineplot2en(difftime_update_en, "Update Operation")
lineplot2en(difftime_delete_en, "Delete Operation")
lineplot2len(difftime_delete_en, "Delete Operation")
lineplot2len(difftime_update_en, "Update Operation")
lineplot2len(difftime_read_en, "Read Operation")
lineplot2len(difftime_create_en, "Insert Operation")
lineplot2en(cpuusage_create_en, "Insert Operation")
lineplot2en(cpuusage_read_en, "Read Operation")
lineplot2en(cpuusage_update_en, "Update Operation")
lineplot2en(cpuusage_delete_en, "Delete Operation")
lineplot2len(cpuusage_delete_en, "Delete Operation")
lineplot2len(cpuusage_update_en, "Update Operation")
lineplot2len(cpuusage_read_en, "Read Operation")
lineplot2len(cpuusage_create_en, "Insert Operation")
lineploten(memory_create_en, "Insert Operation")
lineploten(memory_read_en, "Read Operation")
lineploten(memory_update_en, "Update Operation")
lineploten(memory_delete_en, "Delete Operation")
View(lineplotl)
lineplotlen <- function(data, title) {
ggplot(data=data, aes(x=quantity, y=time, colour=class)) + geom_line() + geom_point() + labs(title=title,x="Quantity of Operations",y="RAM Memory Difference (KB)") + theme(legend.title=element_blank())
}
lineplotlen(memory_delete_en, "Delete Operation")
lineplotlen(memory_update_en, "Update Operation")
lineplotlen(memory_read_en, "Read Operation")
lineplotlen(memory_create_en, "Insert Operation")
save.image("~/testes.RData")
load("~/database-comparative-literature-review/analise cedryk/.RData")
load("~/database-comparative-literature-review/analise cedryk/.RData")
figura12 <- read.table("./figura12.csv", header=TRUE, sep=",")
figura12 <- read.table("./figura12.csv", header=TRUE, sep=",")
setwd("~/database-comparative-literature-review/analise cedryk")
figura12 <- read.table("./figura12.csv", header=TRUE, sep=",")
figura13 <- read.table("./figura13.csv", header=TRUE, sep=",")
figura14 <- read.table("./figura14.csv", header=TRUE, sep=",")
figura15 <- read.table("./figura15.csv", header=TRUE, sep=",")
figura16 <- read.table("./figura16.csv", header=TRUE, sep=",")
figura17 <- read.table("./figura17.csv", header=TRUE, sep=",")
figura18 <- read.table("./figura18.csv", header=TRUE, sep=",")
figura19 <- read.table("./figura19.csv", header=TRUE, sep=",")
figura20 <- read.table("./figura20.csv", header=TRUE, sep=",")
figura21 <- read.table("./figura21.csv", header=TRUE, sep=",")
figura22 <- read.table("./figura22.csv", header=TRUE, sep=",")
barplot(figura12, "Threads","Tempo de Execução (ms)", "right", "Set1")
barplot(figura13, "Threads","Tempo de Execução (ms)", "right", "Set1")
barplot(figura14, "Threads","Tempo de Execução (ms)", "right", "Set1")
barplot
View(figura15)
View(figura16)
barplot2 <- function(data, xlabel, ylabel, position, pal) {
library("ggplot2")
data$threads <- as.factor(data$threads)
ggplot(data=data, aes(x=region,y=desempenho,fill=cenario)) +
geom_bar(stat="identity", color="black", position=position_dodge())+
theme_minimal() +
theme(legend.title=element_blank(), legend.position=position) +
scale_fill_brewer(palette=pal) +
labs(x=xlabel,y=ylabel)
}
barplot2(figura15, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot2 <- function(data, xlabel, ylabel, position, pal) {
library("ggplot2")
data$region <- as.factor(data$region)
ggplot(data=data, aes(x=region,y=desempenho,fill=cenario)) +
geom_bar(stat="identity", color="black", position=position_dodge())+
theme_minimal() +
theme(legend.title=element_blank(), legend.position=position) +
scale_fill_brewer(palette=pal) +
labs(x=xlabel,y=ylabel)
}
barplot2(figura15, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot2 <- function(data, xlabel, ylabel, position, pal) {
library("ggplot2")
ggplot(data=data, aes(x=region,y=desempenho,fill=cenario)) +
geom_bar(stat="identity", color="black", position=position_dodge())+
theme_minimal() +
theme(legend.title=element_blank(), legend.position=position) +
scale_fill_brewer(palette=pal) +
labs(x=xlabel,y=ylabel)
}
barplot2(figura15, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot2 <- function(data, xlabel, ylabel, position, pal) {
library("ggplot2")
data$region <- as.factor(data$region)
ggplot(data=data, aes(x=region,y=desempenho,fill=cenario)) +
geom_bar(stat="identity", color="black", position=position_dodge())+
theme_minimal() +
theme(legend.title=element_blank(), legend.position=position) +
scale_fill_brewer(palette=pal) +
labs(x=xlabel,y=ylabel)
}
barplot2 <- function(data, xlabel, ylabel, position, pal) {
library("ggplot2")
ggplot(data=data, aes(y=desempenho,fill=cenario)) +
geom_bar(stat="identity", color="black", position=position_dodge())+
theme_minimal() +
theme(legend.title=element_blank(), legend.position=position) +
scale_fill_brewer(palette=pal) +
labs(x=xlabel,y=ylabel)
}
barplot2 <- function(data, xlabel, ylabel, position, pal) {
library("ggplot2")
ggplot(data=data, aes(y=desempenho,fill=cenario)) + scale_x_continuous(breaks = c(1,2,3,4,5)) +
geom_bar(stat="identity", color="black", position=position_dodge())+
theme_minimal() +
theme(legend.title=element_blank(), legend.position=position) +
scale_fill_brewer(palette=pal) +
labs(x=xlabel,y=ylabel)
}
barplot2(figura15, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot2 <- function(data, xlabel, ylabel, position, pal) {
library("ggplot2")
data$region <- as.factor(data$region)
ggplot(data=data, aes(x=region,y=desempenho,fill=cenario)) + scale_x_continuous(breaks = c(1,2,3,4,5)) +
geom_bar(stat="identity", color="black", position=position_dodge())+
theme_minimal() +
theme(legend.title=element_blank(), legend.position=position) +
scale_fill_brewer(palette=pal) +
labs(x=xlabel,y=ylabel)
}
barplot2(figura15, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot2 <- function(data, xlabel, ylabel, position, pal) {
library("ggplot2")
data$region <- as.factor(data$region)
ggplot(data=data, aes(x=region,y=desempenho,fill=cenario)) +
geom_bar(stat="identity", color="black", position=position_dodge())+
theme_minimal() +
theme(legend.title=element_blank(), legend.position=position) +
scale_fill_brewer(palette=pal) +
labs(x=xlabel,y=ylabel)
}
barplot2(figura15, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot2 <- function(data, xlabel, ylabel, position, pal) {
library("ggplot2")
data$region <- as.numeric(data$region)
ggplot(data=data, aes(x=region,y=desempenho,fill=cenario)) +
geom_bar(stat="identity", color="black", position=position_dodge())+
theme_minimal() +
theme(legend.title=element_blank(), legend.position=position) +
scale_fill_brewer(palette=pal) +
labs(x=xlabel,y=ylabel)
}
barplot2(figura15, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot2 <- function(data, xlabel, ylabel, position, pal) {
library("ggplot2")
data$region <- as.numeric(as.vector(data$region))
ggplot(data=data, aes(x=region,y=desempenho,fill=cenario)) +
geom_bar(stat="identity", color="black", position=position_dodge())+
theme_minimal() +
theme(legend.title=element_blank(), legend.position=position) +
scale_fill_brewer(palette=pal) +
labs(x=xlabel,y=ylabel)
}
barplot2(figura15, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot1(figura15, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot(figura15, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot2(figura15, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot2 <- function(data, xlabel, ylabel, position, pal) {
library("ggplot2")
data$region <- as.factor(data$region)
ggplot(data=data, aes(x=region,y=desempenho,fill=cenario)) +
geom_bar(stat="identity", color="black", position=position_dodge())+
theme_minimal() +
theme(legend.title=element_blank(), legend.position=position) +
scale_fill_brewer(palette=pal) +
labs(x=xlabel,y=ylabel)
}
barplot2(figura15, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot2 <- function(data, xlabel, ylabel, position, pal) {
library("ggplot2")
data$region <- factor(data$region)
ggplot(data=data, aes(x=region,y=desempenho,fill=cenario)) +
geom_bar(stat="identity", color="black", position=position_dodge())+
theme_minimal() +
theme(legend.title=element_blank(), legend.position=position) +
scale_fill_brewer(palette=pal) +
labs(x=xlabel,y=ylabel)
}
barplot2(figura15, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot2 <- function(data, xlabel, ylabel, position, pal) {
library("ggplot2")
data$region <- as.factor(data$region)
ggplot(data=data, aes(x=region,y=desempenho,fill=cenario)) +
geom_bar(stat="identity", color="black", position=position_dodge())+
theme_minimal() +
theme(legend.title=element_blank(), legend.position=position) +
scale_fill_brewer(palette=pal) +
labs(x=xlabel,y=ylabel)
}
figura22 <- read.table("./figura22.csv", header=TRUE, sep=",")
barplot2(figura22, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
View(figura22)
View(figura22)
figura22 <- read.table("./figura22.csv", header=TRUE, sep=",")
View(figura22)
barplot
View(barplot2)
barplot2(figura22, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot2 <- function(data, xlabel, ylabel, position, pal) {
library("ggplot2")
data$region <- as.factor(data$region)
ggplot(data=data, aes(x=region,y=desempenho,fill=cenario)) +
geom_bar(stat="identity", color="black", position=position_dodge())+
theme_minimal() +
theme(legend.title=element_blank(), legend.position=position) +
scale_fill_brewer(palette=pal) + geom_point(aes(colour = factor(region)))
labs(x=xlabel,y=ylabel)
}
barplot2(figura22, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot2(figura22, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot2 <- function(data, xlabel, ylabel, position, pal) {
library("ggplot2")
data$region <- as.factor(data$region)
ggplot(data=data, aes(x=region,y=desempenho,fill=cenario)) +
geom_bar(stat="identity", color="black", position=position_dodge())+
theme_minimal() +
theme(legend.title=element_blank(), legend.position=position) +
scale_fill_brewer(palette=pal) + geom_point(aes(colour = factor(region))) +
labs(x=xlabel,y=ylabel)
}
barplot2(figura22, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot2 <- function(data, xlabel, ylabel, position, pal) {
library("ggplot2")
ggplot(data=data, aes(x=factor(region),y=desempenho,fill=cenario)) +
geom_bar(stat="identity", color="black", position=position_dodge())+
theme_minimal() +
theme(legend.title=element_blank(), legend.position=position) +
scale_fill_brewer(palette=pal) +
labs(x=xlabel,y=ylabel)
}
barplot2(figura22, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot2(figura22, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot2 <- function(data, xlabel, ylabel, position, pal) {
library("ggplot2")
data$region <- as.factor(data$region)
ggplot(data=data, aes(x=region,y=desempenho,fill=cenario)) +
geom_bar(color="black", position=position_dodge())+
theme_minimal() +
theme(legend.title=element_blank(), legend.position=position) +
scale_fill_brewer(palette=pal) + geom_point(aes(colour = factor(region))) +
labs(x=xlabel,y=ylabel)
}
barplot2(figura22, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot2 <- function(data, xlabel, ylabel, position, pal) {
library("ggplot2")
data$region <- as.factor(data$region)
ggplot(data=data, aes(x=region,y=desempenho,fill=cenario)) +
geom_bar(color="black", position=position_dodge())+
theme_minimal() +
theme(legend.title=element_blank(), legend.position=position) +
scale_fill_brewer(palette=pal) +
labs(x=xlabel,y=ylabel)
}
barplot2(figura22, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot2 <- function(data, xlabel, ylabel, position, pal) {
library("ggplot2")
data$region <- as.factor(data$region)
ggplot(data=data, aes(x=region,y=desempenho,fill=cenario)) +
geom_bar(stat="identity", color="black", position=position_dodge())+
theme_minimal() +
theme(legend.title=element_blank(), legend.position=position) +
scale_fill_brewer(palette=pal) +
labs(x=xlabel,y=ylabel)
}
barplot2(figura22, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot2 <- function(data, xlabel, ylabel, position, pal) {
library("ggplot2")
data$region <- as.factor(data$region)
ggplot(data=data, aes(x=region,y=desempenho,fill=factor(cenario))) +
geom_bar(stat="identity", color="black", position=position_dodge())+
theme_minimal() +
theme(legend.title=element_blank(), legend.position=position) +
scale_fill_brewer(palette=pal) +
labs(x=xlabel,y=ylabel)
}
barplot2(figura22, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot2(figura21, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot2(figura20, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot2(figura19, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot2(figura18, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot2(figura17, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot2(figura16, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
barplot2(figura15, "Region Servers","Desempenho médio (ops/s)", "right", "Set1")
